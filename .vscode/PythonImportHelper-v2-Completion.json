[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "debug_toolbar_urls",
        "importPath": "debug_toolbar.toolbar",
        "description": "debug_toolbar.toolbar",
        "isExtraImport": true,
        "detail": "debug_toolbar.toolbar",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "upstox_client",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "upstox_client",
        "description": "upstox_client",
        "detail": "upstox_client",
        "documentation": {}
    },
    {
        "label": "ApiException",
        "importPath": "upstox_client.rest",
        "description": "upstox_client.rest",
        "isExtraImport": true,
        "detail": "upstox_client.rest",
        "documentation": {}
    },
    {
        "label": "ApiException",
        "importPath": "upstox_client.rest",
        "description": "upstox_client.rest",
        "isExtraImport": true,
        "detail": "upstox_client.rest",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "importPath": "upstox.config",
        "description": "upstox.config",
        "isExtraImport": true,
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "API_SECRET",
        "importPath": "upstox.config",
        "description": "upstox.config",
        "isExtraImport": true,
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "REDIRECT_URI",
        "importPath": "upstox.config",
        "description": "upstox.config",
        "isExtraImport": true,
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "importPath": "upstox.config",
        "description": "upstox.config",
        "isExtraImport": true,
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "REDIRECT_URI",
        "importPath": "upstox.config",
        "description": "upstox.config",
        "isExtraImport": true,
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "API_SECRET",
        "importPath": "upstox.config",
        "description": "upstox.config",
        "isExtraImport": true,
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "upstox.views",
        "description": "upstox.views",
        "isExtraImport": true,
        "detail": "upstox.views",
        "documentation": {}
    },
    {
        "label": "runpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "runpy",
        "description": "runpy",
        "detail": "runpy",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "stock_backend.asgi",
        "description": "stock_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "stock_backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-9f!xg)%70+yfxes4@0-xhm@a#kik7^v2m%*ll7k0p9r&^b-2gd'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n#Internal IP\nINTERNAL_IPS = [",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-9f!xg)%70+yfxes4@0-xhm@a#kik7^v2m%*ll7k0p9r&^b-2gd'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n#Internal IP\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n#Internal IP\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n#Internal IP\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'debug_toolbar',\n    'upstox'\n]",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n]",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'stock_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'stock_backend.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "stock_backend.settings",
        "description": "stock_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "stock_backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "stock_backend.urls",
        "description": "stock_backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('upstox/', include('upstox.urls')),\n] + debug_toolbar_urls()",
        "detail": "stock_backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "stock_backend.wsgi",
        "description": "stock_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "stock_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "AccessTokenView",
        "kind": 6,
        "importPath": "upstox.views.access_token_view",
        "description": "upstox.views.access_token_view",
        "peekOfCode": "class AccessTokenView(View):\n    api_version = \"v2\"\n    clientId = API_KEY\n    clientSecret = API_SECRET\n    grantType = \"authorization_code\"\n    redirectUri = REDIRECT_URI\n    def post(self,request):\n        code = request.GET.get(\"code\")\n        if code:\n            try:",
        "detail": "upstox.views.access_token_view",
        "documentation": {}
    },
    {
        "label": "MyPostView",
        "kind": 6,
        "importPath": "upstox.views.post_view",
        "description": "upstox.views.post_view",
        "peekOfCode": "class MyPostView(View):\n    def post(self, request):\n        # Access POST data\n        data = request.POST.get('my_data')  # Replace 'my_data' with your input name\n        # Process the data as needed\n        response_data = {\n            'message': 'Data received successfully!',\n            'data': data,\n        }\n        return JsonResponse(response_data)",
        "detail": "upstox.views.post_view",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "upstox.views.views",
        "description": "upstox.views.views",
        "peekOfCode": "def index(request):\n    \"\"\"index page\"\"\"\n    return HttpResponse(\"Hello, world. You're at the upstox index.\")\ndef login(request):\n    auth_url = (\n        f\"https://api.upstox.com/v2/login/authorization/dialog\"\n        f\"?response_type=code&client_id={API_KEY}&redirect_uri={REDIRECT_URI}\"\n    )\n    return redirect(auth_url)\ndef access_token(request):",
        "detail": "upstox.views.views",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "upstox.views.views",
        "description": "upstox.views.views",
        "peekOfCode": "def login(request):\n    auth_url = (\n        f\"https://api.upstox.com/v2/login/authorization/dialog\"\n        f\"?response_type=code&client_id={API_KEY}&redirect_uri={REDIRECT_URI}\"\n    )\n    return redirect(auth_url)\ndef access_token(request):\n    code = request.GET.get(\"code\")\n    if code:\n        return get_token(code)",
        "detail": "upstox.views.views",
        "documentation": {}
    },
    {
        "label": "access_token",
        "kind": 2,
        "importPath": "upstox.views.views",
        "description": "upstox.views.views",
        "peekOfCode": "def access_token(request):\n    code = request.GET.get(\"code\")\n    if code:\n        return get_token(code)\n    else:\n        return HttpResponse(\"code\" + code)\ndef get_token(code):\n    # Prepare data for the API request\n    data = {\n        \"client_id\": API_KEY,",
        "detail": "upstox.views.views",
        "documentation": {}
    },
    {
        "label": "get_token",
        "kind": 2,
        "importPath": "upstox.views.views",
        "description": "upstox.views.views",
        "peekOfCode": "def get_token(code):\n    # Prepare data for the API request\n    data = {\n        \"client_id\": API_KEY,\n        \"client_secret\": API_SECRET,\n        \"grant_type\": \"authorization_code\",\n        \"redirect_uri\": REDIRECT_URI,\n        \"code\": code\n    }\n    url = 'https://api.upstox.com/v2/login/authorization/token'",
        "detail": "upstox.views.views",
        "documentation": {}
    },
    {
        "label": "UpstoxConfig",
        "kind": 6,
        "importPath": "upstox.apps",
        "description": "upstox.apps",
        "peekOfCode": "class UpstoxConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'upstox'",
        "detail": "upstox.apps",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "kind": 5,
        "importPath": "upstox.config",
        "description": "upstox.config",
        "peekOfCode": "API_KEY = '919ac699-c816-4dd9-9df8-c4c9b4bb41c5'\nAPI_SECRET = 'yuuwu7wszi'\nREDIRECT_URI = 'http://localhost:8000/upstox/access-token'",
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "API_SECRET",
        "kind": 5,
        "importPath": "upstox.config",
        "description": "upstox.config",
        "peekOfCode": "API_SECRET = 'yuuwu7wszi'\nREDIRECT_URI = 'http://localhost:8000/upstox/access-token'",
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "REDIRECT_URI",
        "kind": 5,
        "importPath": "upstox.config",
        "description": "upstox.config",
        "peekOfCode": "REDIRECT_URI = 'http://localhost:8000/upstox/access-token'",
        "detail": "upstox.config",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "upstox.urls",
        "description": "upstox.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index, name='index'),\n    path('login', views.login, name='login'),\n    # path('access-token',MyPostView.as_view() , name='get-code'),\n    # path('access-token', AccessTokenView.as_view(), name='access-token'),\n    path('access-token', views.access_token, name='access-token'),\n]",
        "detail": "upstox.urls",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len('Scripts') - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = '' or os.path.basename(base)\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in '..\\\\Lib\\\\site-packages'.split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len('Scripts') - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = '' or os.path.basename(base)\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in '..\\\\Lib\\\\site-packages'.split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if '' else path)",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = '' or os.path.basename(base)\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in '..\\\\Lib\\\\site-packages'.split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if '' else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = '' or os.path.basename(base)\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in '..\\\\Lib\\\\site-packages'.split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if '' else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = '' or os.path.basename(base)\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in '..\\\\Lib\\\\site-packages'.split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if '' else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in '..\\\\Lib\\\\site-packages'.split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if '' else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'stock_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]